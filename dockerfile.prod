# Dependencias
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

# Builder - Construye la aplicacion
FROM node:21-alpine3.19 as build

WORKDIR /usr/src/app

# Copiar de deps, los modulos de node
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el codigo fuente de la aplicacion
COPY . .

# RUN npm run test. Si falla no se construye la aplicacion

# Generar el cliente de Prisma
RUN npx prisma generate

# Creamos el build
RUN npm run build

# Instala solo dependencias de producci√≥n usando npm
RUN npm install --omit=dev && npm cache clean --force

# Crear la imagen final de Docker
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/node_modules/.prisma ./node_modules/.prisma

# Copiar la carpeta de distribucion
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

# Crear y usar un usuario con menos privilegios que el que trae la imagen
USER node

EXPOSE 3000

CMD [ "node", "dist/main.js" ]